#!/bin/zsh

# Put the following line at the top of an executable Java source program:
#
#   #!/usr/bin/env java_launcher
#   # vim:ft=java
#
# Optionally add jars to compile and run with:
#
#   # lib:/home/lk/kiln/teamten/java/dist/teamten.jar
#
# Jar pathnames are relative to the Java script. Explicitly-specified scripts
# will appear in the classpath in the order listed, before any standard
# directories.
#
# The source will be compiled, cached, and executed. The source files does not need
# a .java extension, but it does need to match the name of the class.

# To do:
#     Add way to specify class path and libs.
#     Periodically clean out the cache.
#         Delete all directories older than N days on every run.

# Quit on error.
set -e

SOURCE_PATHNAME=$1
if [ "$SOURCE_PATHNAME" = "" ]; then
    echo "java_launcher: Must supply name of script as first argument."
    exit 1
fi
shift

# Compute the MD5 of both the source file and this script.
if [ -f /sbin/md5 ]; then
    # Mac OS/X.
    SUM=$(cat $SOURCE_PATHNAME $0 | md5)
else
    SUM=$(cat $SOURCE_PATHNAME $0 | md5sum | cut -d' ' -f1)
fi
SOURCE_FILENAME=$(basename $SOURCE_PATHNAME)
SOURCE_DIR=$(dirname $SOURCE_PATHNAME)
CLASS_NAME=$(echo $SOURCE_FILENAME | sed -e 's/\.*//')
CACHE_DIR=$HOME/.java_launcher_cache
CLASS_DIR=$CACHE_DIR/$SUM
PROCESSED_SOURCE=$CLASS_DIR/${SOURCE_FILENAME}.java
PROCESSED_CLASS=$CLASS_DIR/${SOURCE_FILENAME}.class

# Process source to find libs for classpath. Relative jars are made relative to the
# source file.
export CLASSPATH=$(awk 'BEGIN { CLASSPATH="" } /^# lib:(.*)$/ { jar = substr($0, 7); if (substr(jar, 1, 1) != "/") jar = SOURCE_DIR "/" jar; if (CLASSPATH != "") CLASSPATH = CLASSPATH ":"; CLASSPATH = CLASSPATH jar } END { print CLASSPATH }' SOURCE_DIR=$SOURCE_DIR < $SOURCE_PATHNAME)

# Default libraries. Put default ones last.
SCRIPT_DIR=$(dirname $0)
LIB_DIR=$SCRIPT_DIR/java_lib
export CLASSPATH=$CLASSPATH:$LIB_DIR/\*

# Compile if necessary.
if [ -f $PROCESSED_CLASS ]; then
    # Refresh the dir so that we know we've used it recently.
    touch $CLASS_DIR
else
    mkdir -p $CLASS_DIR

    # Remove header. That's anything that starts with #. Replace the lines with
    # an empty line so the line numbers don't get thrown off.
    sed -e 's/^#.*//' < $SOURCE_PATHNAME > $PROCESSED_SOURCE

    # Compile real source to our cache.
    javac -d $CLASS_DIR $PROCESSED_SOURCE
fi

# Run the program, passing on arguments from command line.
export CLASSPATH=$CLASS_DIR:$CLASSPATH
java -Xmx1024m $CLASS_NAME $*
